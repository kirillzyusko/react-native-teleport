"use strict";(self.webpackChunkreact_native_teleport_docs=self.webpackChunkreact_native_teleport_docs||[]).push([[175],{3388:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"welcome","metadata":{"permalink":"/react-native-teleport/pr-preview/pr-12/blog/welcome","editUrl":"https://github.com/kirillzyusko/react-native-teleport/tree/main/docs/blog/2025-10-02-welcome.md","source":"@site/blog/2025-10-02-welcome.md","title":"Meet teleport!","description":"Hello!","date":"2025-10-02T00:00:00.000Z","tags":[{"inline":true,"label":"teleport","permalink":"/react-native-teleport/pr-preview/pr-12/blog/tags/teleport"},{"inline":true,"label":"react-native","permalink":"/react-native-teleport/pr-preview/pr-12/blog/tags/react-native"},{"inline":true,"label":"portal","permalink":"/react-native-teleport/pr-preview/pr-12/blog/tags/portal"}],"readingTime":0.83,"hasTruncateMarker":false,"authors":[{"name":"Kirill Zyusko","title":"Library author","url":"https://github.com/kirillzyusko","socials":{"x":"https://x.com/ziusko","linkedin":"https://www.linkedin.com/in/kiryl-ziusko-9a34a4163/","github":"https://github.com/kirillzyusko"},"imageURL":"https://github.com/kirillzyusko.png","key":"kirill","page":null}],"frontMatter":{"slug":"welcome","title":"Meet teleport!","authors":["kirill"],"tags":["teleport","react-native","portal"]},"unlisted":false},"content":"Hello!\\n\\nYou may be curious why another portal library for react-native is needed?\\n\\n- component stays in react-tree\\n- package uses native primitives to teleport views (i. e. `createPortal` on web etc.)\\n- as a result we already can teleport views preserving internal component state\\n- in native development portals are also widespread concepts, but they even offer more advanced features such as \\"mirroring\\"\\n- the ultimate goal not only build primitives for teleportation views, but also provide a set of patterns and ready libs to build complex UIs (context menus, various shared transitions)\\n\\n## Why native portals matter\\n\\nIn native development, portals are widely used to implement flexible UI patterns. Bringing them to React Native fills a long-standing gap:\\n\\n- **Re-parenting without losing state** \u2192 teleport a view while keeping its internal state intact.\\n- **Mirroring support** \u2192 create a live copy of a view elsewhere in the tree (similar to a real-time snapshot).\\n- **Powerful composition** \u2192 enable UI patterns that were previously difficult or impossible with JS-only portals."}]}}')}}]);