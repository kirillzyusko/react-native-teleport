"use strict";(self.webpackChunkreact_native_teleport_docs=self.webpackChunkreact_native_teleport_docs||[]).push([[284],{7455:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"intro","title":"Intro","description":"Intro into portal and teleport concepts","source":"@site/docs/intro.mdx","sourceDirName":".","slug":"/intro","permalink":"/react-native-teleport/pr-preview/pr-12/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/kirillzyusko/react-native-teleport/tree/main/docs/docs/intro.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"description":"Intro into portal and teleport concepts","keywords":["react-native-teleport","react-native teleport","react-native portal","portal","teleport"]},"sidebar":"tutorialSidebar","next":{"title":"Installation","permalink":"/react-native-teleport/pr-preview/pr-12/docs/installation"}}');var i=r(4848),s=r(8453);const o={sidebar_position:1,description:"Intro into portal and teleport concepts",keywords:["react-native-teleport","react-native teleport","react-native portal","portal","teleport"]},l="Intro",a={},c=[{value:"What is the portal?",id:"what-is-the-portal",level:2},{value:"Existing solutions (and their limits)",id:"existing-solutions-and-their-limits",level:2},{value:"Introducing <code>react-native-teleport</code>",id:"introducing-react-native-teleport",level:2},{value:"Comparison",id:"comparison",level:2},{value:"Next steps",id:"next-steps",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"intro",children:"Intro"})}),"\n",(0,i.jsx)(t.h2,{id:"what-is-the-portal",children:"What is the portal?"}),"\n",(0,i.jsxs)(t.p,{children:["A ",(0,i.jsx)(t.strong,{children:"Portal"})," lets you render a component somewhere else in the UI tree, while keeping it logically inside its parent.",(0,i.jsx)(t.br,{}),"\n","Typical use cases include ",(0,i.jsx)(t.strong,{children:"modals"}),", ",(0,i.jsx)(t.strong,{children:"tooltips"}),", ",(0,i.jsx)(t.strong,{children:"popovers"}),", and other overlays where the visual position differs from the React tree position."]}),"\n",(0,i.jsxs)(t.p,{children:["On the web this is done with ",(0,i.jsx)(t.a,{href:"https://react.dev/reference/react-dom/createPortal",children:(0,i.jsx)(t.code,{children:"createPortal"})}),", but React Native has no built-in solution (",(0,i.jsx)(t.a,{href:"https://github.com/facebook/react-native/issues/36273",children:"issue #36273"}),")."]}),"\n",(0,i.jsx)(t.h2,{id:"existing-solutions-and-their-limits",children:"Existing solutions (and their limits)"}),"\n",(0,i.jsxs)(t.p,{children:["Community libraries like ",(0,i.jsx)(t.a,{href:"https://github.com/gorhom/react-native-portal",children:"@gorhom/portal"})," or ",(0,i.jsx)(t.a,{href:"https://github.com/cloudflare/react-gateway",children:"react-gateway"})," emulate portals in ",(0,i.jsx)(t.strong,{children:"JavaScript"}),". They work, but:"]}),"\n",(0,i.jsxs)(t.p,{children:["\u274c Components are ",(0,i.jsx)(t.strong,{children:"re-parented in JS"}),", not in the actual native view tree.",(0,i.jsx)(t.br,{}),"\n","\u274c This can break or block access to ",(0,i.jsx)(t.strong,{children:"React Context"})," values (theme, navigation, i18n, etc.).",(0,i.jsx)(t.br,{}),"\n","\u274c Rendering is still bound to the JS layer, which can limit ",(0,i.jsx)(t.strong,{children:"performance"})," and ",(0,i.jsx)(t.strong,{children:"platform-native behaviors"}),"."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsxs)(t.h2,{id:"introducing-react-native-teleport",children:["Introducing ",(0,i.jsx)(t.code,{children:"react-native-teleport"})]}),"\n",(0,i.jsxs)(t.p,{children:["This library brings ",(0,i.jsx)(t.strong,{children:"true native portals"})," to React Native:"]}),"\n",(0,i.jsxs)(t.p,{children:["\u2705 The component stays in the ",(0,i.jsx)(t.strong,{children:"original React tree"})," \u2192 contexts & state are preserved.",(0,i.jsx)(t.br,{}),"\n","\u2705 The view is physically moved in the ",(0,i.jsx)(t.strong,{children:"native view hierarchy"})," \u2192 correct layout, z-order & performance.",(0,i.jsx)(t.br,{}),"\n","\u2705 Works across ",(0,i.jsx)(t.strong,{children:"iOS, Android, and Web"}),".",(0,i.jsx)(t.br,{}),"\n","\u2705 Supports not only portals but also ",(0,i.jsx)(t.strong,{children:"re-parenting (teleport)"}),": move an existing view without unmounting it."]}),"\n",(0,i.jsx)(t.p,{children:"You can think of it as:"}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:'"Teleport your view in native space, without breaking React logic."'})}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"comparison",children:"Comparison"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.code,{children:"react-native-teleport"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.code,{children:"@gorhom/portal"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Render local component in a different place in the tree"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Support multiple hosts/portals"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u2705"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Native implementation"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u274c"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Keeps React tree continuity"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u274c"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Preserves React context"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u274c"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Move views without losing state (teleport)"}),(0,i.jsx)(t.td,{children:"\u2705"}),(0,i.jsx)(t.td,{children:"\u274c"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["Mirroring ",(0,i.jsx)("sup",{children:(0,i.jsx)("small",{children:"1"})})]}),(0,i.jsxs)(t.td,{children:["\ud83d\udfe0 ",(0,i.jsx)("sup",{children:(0,i.jsx)("small",{children:"2"})})]}),(0,i.jsx)(t.td,{children:"\u274c"})]})]})]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)("sup",{children:"1"})," create a live copy of a view elsewhere in the tree (similar to a\nreal-time snapshot)."]}),"\n"]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)("sup",{children:"2"})," Is planned to be added in the future"]}),"\n"]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"next-steps",children:"Next steps"}),"\n",(0,i.jsxs)(t.p,{children:["Ready to get started? \ud83d\ude80 Head over to the ",(0,i.jsx)(t.a,{href:"installation",children:"Installation"})," guide."]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>l});var n=r(6540);const i={},s=n.createContext(i);function o(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);