"use strict";(self.webpackChunkreact_native_teleport_docs=self.webpackChunkreact_native_teleport_docs||[]).push([[9675],{7493:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"api/components/portal","title":"Portal","description":"A component that moves its children to a different place in the view hierarchy.","source":"@site/docs/api/components/portal.md","sourceDirName":"api/components","slug":"/api/components/portal","permalink":"/react-native-teleport/docs/api/components/portal","draft":false,"unlisted":false,"editUrl":"https://github.com/kirillzyusko/react-native-teleport/tree/main/docs/docs/api/components/portal.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"description":"A component that moves its children to a different place in the view hierarchy.","keywords":["react-native-teleport","react-native teleport","react-native portal","portal"]},"sidebar":"tutorialSidebar","previous":{"title":"PortalHost","permalink":"/react-native-teleport/docs/api/components/portal-host"},"next":{"title":"\ud83c\udfa3 Hooks","permalink":"/react-native-teleport/docs/category/-hooks"}}');var r=n(4848),a=n(8453);const i={sidebar_position:3,description:"A component that moves its children to a different place in the view hierarchy.",keywords:["react-native-teleport","react-native teleport","react-native portal","portal"]},s="Portal",l={},c=[{value:"Props",id:"props",level:2},{value:"<code>name</code>",id:"name",level:3},{value:"<code>hostName</code>",id:"hostname",level:3},{value:"<code>style</code>",id:"style",level:3},{value:"<code>children</code>",id:"children",level:3},{value:"Example",id:"example",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"portal",children:"Portal"})}),"\n",(0,r.jsx)(t.h2,{id:"props",children:"Props"}),"\n",(0,r.jsx)(t.h3,{id:"name",children:(0,r.jsx)(t.code,{children:"name"})}),"\n",(0,r.jsx)(t.p,{children:"The name of the portal. It's used to identify the portal in the context of the portal host."}),"\n",(0,r.jsx)(t.h3,{id:"hostname",children:(0,r.jsx)(t.code,{children:"hostName"})}),"\n",(0,r.jsx)(t.p,{children:"The name of the portal host. It's used to identify the host where the content should be rendered."}),"\n",(0,r.jsx)(t.h3,{id:"style",children:(0,r.jsx)(t.code,{children:"style"})}),"\n",(0,r.jsxs)(t.p,{children:["The style of the portal. Accepts ",(0,r.jsx)(t.a,{href:"https://reactnative.dev/docs/view#style",children:"ViewStyle"})," props."]}),"\n",(0,r.jsx)(t.h3,{id:"children",children:(0,r.jsx)(t.code,{children:"children"})}),"\n",(0,r.jsx)(t.p,{children:"The content that should be rendered in the portal."}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:'import { useState } from "react";\nimport { View, StyleSheet, Button } from "react-native";\nimport { Portal } from "react-native-teleport";\n\nexport default function InstantRootExample() {\n  const [shouldBeTeleported, setTeleported] = useState(true);\n\n  return (\n    <View style={styles.container}>\n      {shouldBeTeleported && (\n        <Portal hostName={"overlay"}>\n          <View style={styles.box} testID="touchable" />\n        </Portal>\n      )}\n      <Button\n        title={shouldBeTeleported ? "Hide" : "Show"}\n        onPress={() => setTeleported((t) => !t)}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: "center",\n    justifyContent: "center",\n  },\n  box: {\n    width: 160,\n    height: 160,\n    marginVertical: 20,\n    backgroundColor: "blue",\n  },\n});\n'})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var o=n(6540);const r={},a=o.createContext(r);function i(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);